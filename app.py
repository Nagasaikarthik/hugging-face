# -*- coding: utf-8 -*-
"""Untitled9.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BmuUdKZPiZ-Iquz6duux97B0iPP0FZh1
"""

import gradio as gr
from sentence_transformers import SentenceTransformer
import faiss
import numpy as np

# Sample course data (replace this with scraped data)
course_data = [
    {'title': 'Introduction to Machine Learning', 'description': 'Learn the basics of ML.'},
    {'title': 'Deep Learning with PyTorch', 'description': 'Understand DL concepts using PyTorch.'},
]

# Load a pre-trained SentenceTransformer model
model = SentenceTransformer('sentence-transformers/all-MiniLM-L6-v2')

# Generate embeddings for course titles + descriptions
course_texts = [course['title'] + " " + course['description'] for course in course_data]
course_embeddings = model.encode(course_texts)

# Build FAISS index
embeddings = np.array(course_embeddings)
index = faiss.IndexFlatL2(embeddings.shape[1])
index.add(embeddings)

# Define the search function
def search_courses(query):
    query_embedding = model.encode([query])
    D, I = index.search(query_embedding, k=2)  # Top 2 results
    results = [course_data[i]['title'] + " - " + course_data[i]['description'] for i in I[0]]
    return results

# Create a Gradio interface
demo = gr.Interface(fn=search_courses, inputs="text", outputs="text", title="Smart Course Search")

# Launch the app
demo.launch()

git add .
git commit -m "Initial commit"
git push origin main